#include<bits/stdc++.h>
using namespace std;

class Node{
public:
	int Data;
	Node*next;
	Node(int d){
    Data = d;
    next = NULL;
	}
};

Node* sortedMerge(Node*head1 , Node*head2){
  Node*fh = NULL;
  Node*ft = NULL;
  if(head1 == NULL)
  	return head2;

  if(head2 == NULL)
  	return head1;

  while(head1!= NULL && head2!= NULL){
  	if(fh == NULL && ft == NULL){
  		if(head1->Data>head2->Data){
  			fh = head2;
  			ft = head2;
  			head2 = head2->next;
  		}else{
  			fh = head1;
  			ft = head1;
  			head1 = head1->next;
  		}
  	}else{
  		if(head1->Data>head2->Data){
  			ft->next = head2;
  			ft = ft->next;
  			head2 = head2->next;
  		}else{
  			ft->next = head1;
  			ft = ft->next;
  			head1 = head1->next;
  		}
  	}
  }
  if(head1!= NULL){
  	ft->next =head1;
  }
  if(head2!= NULL){
  	ft->next = head2;
  }
  return fh;
}

void printList(Node*head){
	Node*temp = head;
	while(temp!= NULL){
		cout<<temp->Data<<" ";
		temp = temp->next;
	}
	cout<<endl;
}

int main(){

    Node*res = NULL;

	Node*head1 = new Node(2);
	Node*second1 = new Node(6);
	Node*third1= new Node(9);
	Node*fourth1 = new Node(10);
	Node*fifth1 = new Node(12);

	head1->next =  second1;
	second1->next = third1;
	third1->next = fourth1;
	fourth1->next = fifth1;

	Node*head2 = new Node(15);
	Node*second2 = new Node(25);
	Node*third2= new Node(27);

	head2->next =  second2;
	second2->next = third2;


	res = sortedMerge(head1, head2);
	printList(res);

	
	return 0;  
}


   
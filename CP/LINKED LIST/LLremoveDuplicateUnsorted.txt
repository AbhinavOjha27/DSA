#include<bits/stdc++.h>
using namespace std;

class Node{
public:
	int Data;
	Node*next;
	Node(int d){
    Data = d;
    next = NULL;
    }
};
void removeDuplicate(Node*head){
	Node*ptr1 = head;
	Node*ptr2 = head->next;
	Node*dup = NULL;

	while(ptr1!=NULL && ptr1->next!=NULL){
		if (ptr1->Data == ptr2->Data){
			ptr1->next = ptr2->next;
			dup = ptr2;
			ptr2 = ptr2->next;
			free(dup);
		}
		else{
			ptr2 = ptr2->next;
			if(ptr2->Data == ptr1->Data){
				dup = ptr2;
				ptr2 = ptr2->next;
				free(dup);
			}
			else{
				ptr1 = ptr2;
				ptr2 = ptr2->next;
			}
		}
	}
	void printList(Node*head){
	Node*temp = head;
	while(temp!=NULL){
		cout<<temp->Data<<" ";
		temp = temp->next;
	}
	cout<<endl;
	}
}

int main(){

	Node*head = new Node(20);
	Node*second = new Node(10);
	Node*third = new Node(20);
	Node*fourth = new Node(40);
	Node*fifth = new Node(20);

	head->next = second;
	second->next = third;
	third->next = fourth;
	fourth->next = fifth;
    
    cout<<"Linked List before duplicate removal\n";
    printList(head);

    cout<<"\n Linked List after duplicate removal\n";
    removeDuplicate(head);
    printList(head);

	return 0;
}
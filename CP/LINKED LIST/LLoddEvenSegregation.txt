#include<bits/stdc++.h>
using namespace std;

class Node{
public:
	int Data;
	Node*next;
	Node(int d){
    Data = d;
    next = NULL;
	}
};

void printList(Node*head){
	Node*temp = head;
	while(temp!= NULL){
		cout<<temp->Data<<" ";
		temp = temp->next;
	}
	cout<<endl;
}

void segregateEvenOdd(Node*&head){
	Node*evenStart = NULL;
	Node*evenEnd = NULL;
	Node*oddStart = NULL;
	Node*oddEnd = NULL;
	Node*curr = head;

	while(curr!= NULL){
		int val = curr->Data;

		if(val%2 == 0){
			if(evenStart == NULL){
			evenStart = curr;
			evenEnd = evenStart;
		    }
		    else{
            evenEnd = curr;
            evenEnd = evenEnd->next;
		}
	}
		else{
			if(oddStart == NULL){
				oddStart = curr;
				oddEnd = oddStart;
			}
			else{
				oddEnd = curr;
				oddEnd = oddEnd->next;
			}
		}
    curr = curr->next;
	}
	if(oddStart == NULL || evenStart == NULL)
		return;
	evenEnd->next = oddStart;
	oddStart->next = NULL;

	head = evenStart;
}


int main(){

	Node*head = new Node(20);
	Node*second = new Node(6);
	Node*third = new Node(9);
	Node*fourth = new Node(7);
	Node*fifth = new Node(10);

	head->next =  second;
	second->next = third;
	third->next = fourth;
	fourth->next = fifth;

	cout<<"Original Linked List\n ";
	printList(head);
 
    segregateEvenOdd(head);
	printList(head);

	return 0;  
}

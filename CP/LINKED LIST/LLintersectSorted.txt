#include<bits/stdc++.h>
using namespace std;

class Node{
public:
	int Data;
	Node*next;
	Node(int d){
    Data = d;
    next = NULL;
	}
};
// Program is not completed


void printList(Node*head){
	Node*temp = head;
	while(temp!= NULL){
		cout<<temp->Data<<" ";
		temp = temp->next;
	}
	cout<<endl;
}

Node* intersectSorted(Node*head1, Node*head2){
	Node*dummy = new Node(1000);
	Node*current = dummy;
	Node*temp1 = head1;
	Node*temp2 = head2;
	while(temp1!= NULL && temp2!= NULL){
		if(temp1->Data == temp2->Data){
			Node*new_node = new Node(temp1->Data);
			current->next = new_node;
			current = current->next;
			temp1 = temp1->next;
			temp2 = temp2->next;
		}
		else if(temp1->Data<temp2->Data){
			temp1 = temp1->next;
		}
		else if(temp2->Data<temp1->Data){
            temp2 = temp2->next;
		}
	}return dummy->next;
}

int main(){
  
    Node*intersect = NULL;

	Node*head1 = new Node(10);
	Node*second1 = new Node(20);
	Node*third1 = new Node(30);
	Node*fourth1 = new Node(40);

	head1->next =  second1;
	second1->next = third1;
	third1->next = fourth1;

	Node*head2 = new Node(50);
	Node*second2 = new Node(60);
	Node*third2 = new Node(70);
	Node*fourth2 = new Node(80);

	head2->next =  second2;
	second2->next = third2;
	third2->next = fourth2;

    intersect = intersectSorted(head1 , head2);
	cout<<"Linked List containing common item of head1 && head2 is\n";
	printList(intersect);

	return 0;  
}
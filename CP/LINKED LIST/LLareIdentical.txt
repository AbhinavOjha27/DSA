#include<bits/stdc++.h>
using namespace std;

class Node{
public:
	int Data;
	Node*next;
	Node(int d){
    Data = d;
    next = NULL;
	}
};

bool areIdentical(Node*head1 , Node*head2){
	while(head1!= NULL && head2!= NULL){
		if(head1->Data != head2->Data)
			return false;

		head1 = head1->next;
		head2 = head2->next;
	}
	return(head1 == NULL && head2 == NULL);
}

void printList(Node*head){
	Node*temp = head;
	while(temp!= NULL){
		cout<<temp->Data<<" ";
		temp = temp->next;
	}
	cout<<endl;
}

int main(){

	Node*res = NULL;

	Node*head1 = new Node(2);
	Node*second1 = new Node(6);
	Node*third1= new Node(9);
	Node*fourth1 = new Node(10);
	Node*fifth1 = new Node(12);
	Node*sixth1  = new Node(15);
	Node*seventh1 = new Node(20);

	head1->next =  second1;
	second1->next = third1;
	third1->next = fourth1;
	fourth1->next = fifth1;
	fifth1->next = sixth1;
	sixth1->next = seventh1;
    
    Node*head2 = new Node(2);
	Node*second2 = new Node(6);
	Node*third2= new Node(9);
	Node*fourth2 = new Node(10);
	Node*fifth2 = new Node(12);
	Node*sixth2  = new Node(15);
	Node*seventh2 = new Node(20);

	head2->next =  second2;
	second2->next = third2;
	third2->next = fourth2;
	fourth2->next = fifth2;
	fifth2->next = sixth2;
	sixth2->next = seventh2;

	if(areIdentical(head1,head2))
		cout<<"Identical";
	else
		cout<<"Not Identical";

	return 0;  
}


   